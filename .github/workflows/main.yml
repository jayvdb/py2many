name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    strategy:
      matrix:
        os:
          - windows-2019
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main

      - name: Install Julia dependencies for ${{ runner.os }}.
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install --yes astyle
              curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.41.0/ktlint
              chmod a+x ktlint
              sudo mv ktlint /usr/local/bin/
              (cd /usr/local/bin && sudo ln -s $(find ~/.julia -name format.jl))
              (cd /usr/local/bin && sudo ln -s $HOME/go/bin/golint)
          elif [ "$RUNNER_OS" == "macOS" ]; then
              brew tap holgerbrandl/tap https://github.com/holgerbrandl/homebrew-tap
              brew install clang-format kscript ktlint astyle
              (cd /usr/local/bin && ln -s $(find ~/.julia -name format.jl))
              (cd /usr/local/bin && ln -s $HOME/go/bin/golint)
          elif [ "$RUNNER_OS" == "Windows" ]; then
              curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.41.0/ktlint
          fi

      - name: Use ktlint
        shell: bash
        run: |
          java -jar ./ktlint tests/expected/print.kt
          git diff --exit-code tests/expected/print.kt
          exit 12

      - name: Install dart dependencies
        shell: bash
        run: |
          (cd tests && dart pub global run stagehand:stagehand --override package-simple \
           && dart pub add sprintf \
           && dart pub add tuple \
           && flutter pub add vnum)

      - name: Install cargo-script
        run: cargo install cargo-script

      - name: Run tox
        shell: bash
        # sdkman init can be replaced with actions setup when the following is fixed
        # https://github.com/sdkman/sdkman-action/issues/8
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          LINT=1
          if [ "$RUNNER_OS" == "Windows" ]; then
            export PATH="$PATH:/C/Program Files/LLVM/bin"
          fi
          tox -- -k 'cli and kotlin'

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install linters
        run: pip install black pyflakes cpplint

      - name: Remove tests/cases/*.py
        run: rm tests/cases/*.py

      - name: Run black
        run: black */ *.py

      - name: Run pyflakes
        run: pyflakes */ *.py

      - name: Run cpplint
        run: cpplint --filter=-legal/copyright tests/expected/*.cpp