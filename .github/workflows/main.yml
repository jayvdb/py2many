name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, wsl ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Can be blank, or one of: cpp, dart, go, julia, kotlin, nim, smt, vlang
  FOCUS: ''
jobs:
  build:

    strategy:
      matrix:
        python-version: [ '3.8' ]
        os:
          - windows-2022
    runs-on: ${{ matrix.os }}

    steps:

      - uses: Vampire/setup-wsl@v1

      - name: Install wsl brew
        shell: wsl-bash {0}
        run: |
          set -ex
          apt-get update
          apt-get install --no-install-recommends -y ca-certificates curl git wget
          adduser --disabled-password --gecos "" linuxbrew
          wget -c https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
          # c.f. https://stackoverflow.com/questions/72435188/how-to-install-brew-using-a-shallow-clone
          sed -i 's:"git" "fetch":"git" "fetch" "--depth" "1":' install.sh
          sed -i '/"update" "--force"/d' install.sh
          mv install.sh /tmp
          chmod a+r /tmp/install.sh
          echo "export HOMEBREW_NO_AUTO_UPDATE=1" >> /home/linuxbrew/.profile
          su -l linuxbrew -c "CI=1 USER=linuxbrew bash /tmp/install.sh"
          echo "eval \"\$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"" >> /home/linuxbrew/.profile
          chmod a+x /home/linuxbrew/.linuxbrew/bin/brew
          chmod a+x /home/linuxbrew/.linuxbrew/Homebrew/bin/brew

      - shell: bash
        run: exit 1

      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        if: ${{ matrix.os != 'macos-12' && (!env.FOCUS || env.FOCUS == 'kotlin') }}
        with:
          distribution: adopt
          java-version: 15

      - name: Add missing dependencies on act Medium runner
        if: ${{ env.ACT }}
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
              cargo \
              clang-format \
              powershell \
              rustfmt \
              z3 \
            && true
          echo "${HOME}/.cargo/bin/" >> $GITHUB_PATH

      - uses: subosito/flutter-action@v1
        if: ${{ !env.FOCUS || env.FOCUS == 'dart' }}
        with:
          flutter-version: '2.10.5'

      - uses: julia-actions/setup-julia@v1
        if: ${{ !env.FOCUS || env.FOCUS == 'julia' }}
      - uses: fwilhe2/setup-kotlin@main
        if: ${{ matrix.os != 'macos-12' && (!env.FOCUS || env.FOCUS == 'kotlin') }}

      - uses: jiro4989/setup-nim-action@v1
        if: ${{ !env.FOCUS || env.FOCUS == 'nim' }}
      - uses: actions/setup-go@v2
        if: ${{ !env.FOCUS || env.FOCUS == 'go' }}
        # Needed as https://github.com/actions/setup-go/pull/89 is not merged
        with:
          go-version: '1.15'
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2

      - name: Install go packages
        if: ${{ !env.FOCUS || env.FOCUS == 'go' }}
        shell: bash
        run: |
          go get github.com/hgfischer/go-iter
          go get github.com/google/go-cmp/cmp
          go get github.com/adsharma/py2many/pygo/runtime
          go get github.com/mgechev/revive
          if [[ -d /usr/local/bin && ! -f /usr/local/bin/golint && -f $HOME/go/bin/golint ]]; then
            (cd /usr/local/bin && sudo ln -fs $HOME/go/bin/golint)
          fi

      - name: Install tox
        run: |
          pip3 --version
          pip3 install setuptools tox

      - name: Install Julia packages
        if: ${{ !env.FOCUS || env.FOCUS == 'julia' }}
        shell: bash
        run: |
          julia -e 'using Pkg; Pkg.add("JuliaFormatter")'
          julia -e 'using Pkg; Pkg.add("SuperEnum")'
          if [[ -d /usr/local/bin && ! -f /usr/local/bin/format.jl ]]; then
            (cd /usr/local/bin && sudo ln -fs $(find ~/.julia -name format.jl))
          fi

      - name: Set up Homebrew (Linux)
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        shell: bash
        env:
          LB_USERNAME: linuxbrew
        run: |
          set -ex
          if [ ! -f /home/$LB_USERNAME/.linuxbrew/bin/brew ]; then
            rm -rf /home/$LB_USERNAME/
            deluser $LB_USERNAME
            adduser --disabled-password --gecos "" $LB_USERNAME
            wget -c https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
            # c.f. https://stackoverflow.com/questions/72435188/how-to-install-brew-using-a-shallow-clone
            sed -i 's:"git" "fetch":"git" "fetch" "--depth" "1":' install.sh
            sed -i '/"update" "--force"/d' install.sh
            mv install.sh /tmp
            chmod a+r /tmp/install.sh
            echo "export HOMEBREW_NO_AUTO_UPDATE=1" >> /home/$LB_USERNAME/.profile
            su -l $LB_USERNAME -c "CI=1 USER=$LB_USERNAME bash /tmp/install.sh"
            echo "eval \"\$(/home/$LB_USERNAME/.linuxbrew/bin/brew shellenv)\"" >> /home/$LB_USERNAME/.profile
            chmod a+x /home/$LB_USERNAME/.linuxbrew/bin/brew
            chmod a+x /home/$LB_USERNAME/.linuxbrew/Homebrew/bin/brew
          fi
          echo "/home/$LB_USERNAME/.linuxbrew/bin" >> $GITHUB_PATH

      - name: Install dependencies for ${{ runner.os }}.
        shell: bash
        run: |
          set -ex
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install --yes \
                  astyle \
                  clang-14 \
                  z3 \
                && true
              echo "CXX=clang++-14" >> $GITHUB_ENV
              # cljstyle has no linux cask https://github.com/Homebrew/homebrew-cask/blob/HEAD/Casks/cljstyle.rb
              # but can be added https://github.com/greglook/cljstyle/releases/tag/0.15.0
              brew tap holgerbrandl/tap https://github.com/holgerbrandl/homebrew-tap
              brew tap athrunsun/linuxbinary
              time brew install cljstyle ktlint kscript
          elif [ "$RUNNER_OS" == "macOS" ]; then
              brew tap holgerbrandl/tap https://github.com/holgerbrandl/homebrew-tap
              brew install astyle clang-format cljstyle kscript ktlint z3
              # brew's vlang 0.2.4 is too old, and has no @head
          elif [ "$RUNNER_OS" == "Windows" ]; then
              choco install zip curl astyle llvm
          fi
          echo "WHICH_KSCRIPT=$(which kscript 2>/dev/null)" >> $GITHUB_ENV
          echo "WHICH_V=$(which v 2>/dev/null)" >> $GITHUB_ENV

      - name: Install V
        if: ${{ !env.WHICH_V && (!env.FOCUS || env.FOCUS == 'vlang') }}
        uses: vlang/setup-v@v1
        with:
          token: ${{ github.token }}

      - name: Install dart dependencies
        if: ${{ !env.FOCUS || env.FOCUS == 'dart' }}
        shell: bash
        run: |
          dart --version
          flutter --version
          set -ex

          # tests/build here must be the same as defined in test_cli
          if [[ ! -d tests/build ]]; then
            dart create --no-pub -t package-simple tests/build
            cat tests/build/pubspec.yaml
          fi

          cd tests/build
          if ! grep collection pubspec.yaml ; then
            # Specifying the version here doesnt stick
            dart pub add collection:1.15.0
            cat pubspec.yaml
            dart pub add sprintf
            dart pub add tuple
          fi
          if ! grep vnum pubspec.yaml ; then
            cat pubspec.yaml
            sed -i.bak '/test:/d' pubspec.yaml
            # Force version downgrade here
            sed -i.bak 's:1.16.0:1.15.0:' pubspec.yaml
            flutter pub add vnum
          fi

      - name: Install cargo-script
        if: ${{ !env.FOCUS || env.FOCUS == 'rust' }}
        run: cargo install cargo-script

      - name: Install smt dependencies
        if: ${{ matrix.os == 'ubuntu-22.04' && (!env.FOCUS || env.FOCUS == 'smt') }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            (curl -sLO https://raw.githubusercontent.com/greglook/cljstyle/main/script/install-cljstyle
             sed -i.bak 's/--overwrite//' install-cljstyle
             chmod +x install-cljstyle
             sudo ./install-cljstyle)
          fi

      - name: Run tox
        shell: bash
        env:
          LB_USERNAME: linuxbrew
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            export PATH="$PATH:/C/Program Files/LLVM/bin"
          fi

          if [ -d /home/$LB_USERNAME/.linuxbrew ]; then
            eval "$(brew shellenv)"
          fi

          if [ "$FOCUS" ]; then
            tox -e py38 -- -k "$FOCUS"
          else
            tox -e py38
          fi

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install linters
        run: pip install black pyflakes cpplint

      - name: Remove tests/cases/*.py & tests/expected/*.py
        run: rm tests/cases/*.py tests/expected/*.py tests/dir_cases/test1-*-expected/*.py

      - name: Run black
        run: black --check */ *.py

      - name: Run pyflakes
        run: pyflakes */ *.py

      - name: Run cpplint
        run: cpplint --filter=-legal/copyright,-whitespace/semicolon,-runtime/reference tests/expected/*.cpp
